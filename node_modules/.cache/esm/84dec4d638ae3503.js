let passport,User,secretOrKey,Strategy,ExtractJwt;_38a‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_38a‍.w("../../Database/Models",[["User",["User"],function(v){User=v}]]);_38a‍.w("../Constants",[["APP_SECRET",["secretOrKey"],function(v){secretOrKey=v}]]);_38a‍.w("passport-jwt",[["Strategy",["Strategy"],function(v){Strategy=v}],["ExtractJwt",["ExtractJwt"],function(v){ExtractJwt=v}]]);




const opts = {
    secretOrKey,
    jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken()
};

passport.use( new Strategy(opts,async({ id } ,done) =>{
    try {
        let user = await User.findById(id);
        if(!user){
            throw new Error("User NotFound.");
        }
        return done(null,user.getUserInfo());
    } catch (error) {
        done(null,false);
    }
    })
);