let cors,json,express,consola,join,passport,PORT,DB,userApis,pharmacyApis,productApis,pharmacyProductApis,userorderApis;_3c2‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_3c2‍.w("body-parser",[["json",["json"],function(v){json=v}]]);_3c2‍.w("express",[["default",["express"],function(v){express=v}]]);_3c2‍.w("consola",[["default",["consola"],function(v){consola=v}]]);_3c2‍.w("path",[["join",["join"],function(v){join=v}]]);_3c2‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_3c2‍.w("./Infrastructure/Constants",[["PORT",["PORT"],function(v){PORT=v}],["DB",["DB"],function(v){DB=v}]]);_3c2‍.w("./Api/Routes/User/User.Routes",[["default",["userApis"],function(v){userApis=v}]]);_3c2‍.w("./Api/Routes/Pharmacy/Pharmacy.Routes",[["default",["pharmacyApis"],function(v){pharmacyApis=v}]]);_3c2‍.w("./Api/Routes/Pruduct/Product.Routes",[["default",["productApis"],function(v){productApis=v}]]);_3c2‍.w("./Api/Routes/Pharmacy/PharmacyProduct.Routes",[["default",["pharmacyProductApis"],function(v){pharmacyProductApis=v}]]);_3c2‍.w("./Api/Routes/User/UserOrder.Routes",[["default",["userorderApis"],function(v){userorderApis=v}]]);// Import Packages







const DBConnection = require('./Database/Connection.DB');
// Import Application Constants

// Router Import






// Import passport Middelware
require('./Infrastructure/Middlewares/passport.middleware');
// Initialize express applicaion
const app = express();

// Apply Application Middlewares
app.use(cors());
app.use(json());
app.use(passport.initialize());
app.use(express.static(join(__dirname, '../Uploads')));

// Inject Sub Router and apis
app.use('/users',userApis);
app.use('/pharmacy',pharmacyApis);
app.use('/product',productApis);
app.use('/parmacyproduct',pharmacyProductApis);
app.use('/userorder',userorderApis);

// Implement Main startUp Function
const main = async()=>{
    try {
        // connect to database
        DBConnection(DB);
        // start application start listening for request server
        app.listen(PORT,()=>{
            consola.success(`Server Listening on Port ${PORT}...`);
        });
    } catch (error) {
        consola.error(new Error(`Unable to start the server \n${error.message}`));
    }
};

main();